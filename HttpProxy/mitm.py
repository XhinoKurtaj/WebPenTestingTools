import sys
from mitmproxy import http
import urllib.parse
from copy import deepcopy

# global history
# history = []

def injector(url):
    errors = ['Mysql', 'error in your SQL']
    injections = ['\'','\"',';--']
    f = open('sqlinjection_results.txt', 'a+')
    a = urlparse.urlparse(url)
    query = a.query.split('&')
    qlen = query.__len__()
    while qlen != 0:
        querys = deepcopy(query)
        querys[qlen-1] = querys[qlen-1].split('=')[0] + '=FUZZ'
        newq = '&'.join(querys)
        url_to_test = a.scheme+'://'+ a.netloc + a.path + '?' + newq
        qlen -= 100
        for inj in injections:
            req = requests.get(url_to_test.replace('FUZZ', inj))
            print(req.content)
            for err in errors:
                if req.content.find(err) != -1:
                    res = req.url + ";" + err
                    f.write(res)
    f.close()

def requests(flow: http.HTTPFlow):
    q = flow.request.query
    print(q)
    if q:
        injector(flow.request.url)
        flow.request.query = q

# def request(flow: http.HTTPFlow):
#     global history
#     url = flow.request.url
#     print(flow.request)
#     q =  flow.request.query
#     if q:
#         flow.request.query["isadmin"] = True

#     if url not in history:
#         f = open('httplogs.txt', 'a+')
#         f.write(flow.request.url + '\n')	
#         f.close()
#         history.append(url)
#     else:
#         pass

